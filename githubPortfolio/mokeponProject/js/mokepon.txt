const $ = selector => document.getElementById(selector);
function iniciarJuego(){
    let botonMascotaJugador = document.getElementById("boton_mascota");
    botonMascotaJugador.addEventListener("click",seleccionarMascotaJugador);
    let botonReiniciar = document.getElementById("boton_reiniciar");
    botonReiniciar.addEventListener("click",reiniciar)
    
    let botonFuego = document.getElementById("boton_fuego");
    botonFuego.addEventListener("click",setFuego);
    let botonAgua = document.getElementById("boton_agua");
    botonAgua.addEventListener("click",setAgua);
    let botonAire = document.getElementById("boton_aire");
    botonAire.addEventListener("click",setAire);
    let botonTierra = document.getElementById("boton_tierra");
    botonTierra.addEventListener("click",setTierra);
  }

function getRandomInt(max){
  return Math.floor(Math.random()*max);

}
function getRandomIntInverval(min,max){
  let difference = max -min;
  let rand = Math.random();
  rand = Math.floor(rand*difference);
  rand = rand + min;
  return rand;
}
function hideSetup(){
  $("seleccionar_mascota").style.display = "none";
}

function showGame(){
 $("seleccionar_ataque").style.display = "flex";
 $("mensajes").style.display = "initial";
 let botonAgua = $("boton_agua");
 botonAgua.disabled = false;
 let botonAire = $("boton_aire");
 botonAire.disabled = false;
 let botonTierra = $("boton_tierra");
 botonTierra.disabled = false;
 let botonFUego = $("boton_fuego");
}
function reiniciar(){
  location.reload();
  
}

function seleccionarMascotaEnemigo(tm,mj){
  const mascotaJugador = mj;
  const totalMascotas = tm;
  let mascotaEnemigo = getRandomInt(totalMascotas);
  console.log(mascotaEnemigo)
  if(mascotaJugador == mascotaEnemigo){while(mascotaJugador == mascotaEnemigo){mascotaEnemigo = getRandomInt(totalMascotas-1);}}
  let nombreEnemigo  = document.getElementsByName("mascota")[mascotaEnemigo].id;
  document.getElementById("nombreMascotaEnemigo").innerHTML = nombreEnemigo;
}

function seleccionarMascotaJugador(){
  let valor  = "";
  let nombre = "";
  const totalDeMascotas = 7; //total de mascotas
  for(let i = 0;i < totalDeMascotas;i++){
    valor = document.getElementsByName("mascota")[i].checked;
    if(valor ==true){
        escogioMascota = false;
        nombre = document.getElementsByName("mascota")[i].id;
        document.getElementById("nombreMascota").innerHTML = nombre;
        seleccionarMascotaEnemigo(totalDeMascotas,i);
        hideSetup();
        showGame();
        break;
    }
    if(i == totalDeMascotas){alert("no mames wey escoge tu pinche mascota");}
  }
}
//Estos metodos deberían hacer parte de la clase mascota, son los getter 
function reconocerMascotaJugador(){
  let mascotaJugador = document.getElementById("nombreMascota").innerHTML;
  console.log(mascotaJugador);
  return(mascotaJugador);
}
function reconocerMascotaEnemigo(){
  let mascotaEnemiga = document.getElementById("nombreMascotaEnemigo").innerHTML;
  return(mascotaEnemiga);
}

function ataqueSegunMascotas(mascota){
  //clasifica que tabla debe tener cada mascota según su elemento. También incluye el valor del elemento
  //fuego = 0, agua = 1, aire = 2, tierra = 3, aguayFuego = 4,aguayTierra = 5,tierrayFuego = 6
  switch(mascota){
    case "Hipodoge":
      elemento = 1;
      return(elemento);
    break;
    case "Capipepo":
      elemento = 3;
      return(elemento);
    break;
    case "Ratigueya":
      elemento = 0;
      return(elemento);
    break;
    case "Langostelvis":
      elemento = 4;
      return(elemento);
    break;
    case "Tucapalma":
      elemento = 5;
      return(elemento);
    break;
    case "Pydos":
      elemento = 6;
      return(elemento);
    case "Tornadin":
      elemento = 2;
      return(elemento);
    break;
  
  
  }
 
  //llaman a la funcion reconocer mascotas y crean los casos para identificar el elmento de cada mascota
}
function ataqueEnemigo(){
  //genera un tipo de ataque aleatorio
tipoDeAtaque = getRandomInt(3);
return(tipoDeAtaque) 
}
function ataques(elementoAtacante,elementoAtacado){
//los array contienen los valores de enfrentamiento frente a otros elementos en el orden [fuego,agua,aire,tierra] 
ataqueNormal  = (getRandomInt(10)/100)*3;
ataqueCritico = (getRandomInt(5)/100)*3 + ataqueNormal;
ataqueMenor   = ataqueNormal - ((getRandomInt(5)/100)*3);
let valorAtacante = 0;
let valorAtacado = 0;
let fuego        = [ataqueNormal,ataqueCritico,ataqueNormal,ataqueMenor];
let aire         = [ataqueNormal,ataqueMenor,ataqueNormal,ataqueCritico];
let agua         = [ataqueMenor,ataqueNormal,ataqueCritico,ataqueNormal];
let tierra       = [ataqueCritico,ataqueNormal,ataqueMenor,ataqueNormal];
let aguayFuego   = [ataqueMenor,ataqueCritico,ataqueCritico,ataqueMenor];
let aguayTierra  = [ataqueCritico,ataqueCritico,ataqueMenor,ataqueMenor];
let tierrayFuego = [ataqueCritico,ataqueCritico,ataqueMenor,ataqueMenor];
if(elementoAtacado == 4){elementoAtacado = getRandomIntInverval(0,1)}
else if(elementoAtacado == 5){elementoAtacado = getRandomIntInverval(1,3)}
else if(elementoAtacado == 6){elementoAtacado = 3}
switch(elementoAtacante){
//fuego = 0, agua = 1, aire = 2, tierra = 3, aguayFuego = 4,aguayTierra = 5,tierrayFuego = 6
  case 0:
    return fuego[elementoAtacado];
    break;
  case 1:
    return agua[elementoAtacado];
    break;
  case 2:
    return aire[elementoAtacado];
    break;
  case 3:
    return tierra[elementoAtacado];
    break;
  case 4:
    return aguayFuego[elementoAtacado];
    break;
  case 5:
    return aguayTierra[elementoAtacado];
    break;
  case 6:
    return tierrayFuego[elementoAtacado];
    break;
  
  
  
  
}




}

function jugadorAtaca(elementoAtaque,turno){
  let elementoAtacado = 0;
  let valordeAtaque   = 0;
  let vidaTexto = "";
  let vida = 3;
  let vidas = 3;
if(turno == "jugador"){
    let mascotaEnemigo = reconocerMascotaEnemigo();
    vidaTexto = document.getElementById("vidasJugador").innerHTML;
    vida = Number(vidaTexto);
    elementoAtacado = ataqueSegunMascotas(mascotaEnemigo);
    valordeAtaque = ataques(elementoAtaque,elementoAtacado);
    vida -= parseFloat(valordeAtaque,2); 
    document.getElementById("vidasJugador").innerHTML = vida.toFixed(2);
     
  }
else if(turno == "enemigo"){
     let mascotaJugador = reconocerMascotaJugador();
     vidaTextoEnemigo = document.getElementById("vidasEnemigo").innerHTML;
     vidas = Number(vidaTextoEnemigo);
     elementoAtacado = ataqueSegunMascotas(mascotaJugador);
     valordeAtaque   = ataques(elementoAtaque,elementoAtacado);
     vidas -= parseFloat(valordeAtaque,2);
     console.log(typeof vidas);
     document.getElementById("vidasEnemigo").innerHTML = vidas.toFixed(2);
     


 }
 console.log(vidas)
if(vida <= 0 && vidas <= 0){
  document.getElementById("seleccionar_ataque").style.display = "none";
  document.getElementById("resultado_juego").style.display = "inline";
  document.getElementById("resultado_juego").innerHTML = "has ganado";
  document.getElementById("vidasJugador").innerHTML = "-";
  document.getElementById("vidasEnemigo").innerHTML = "-";
}
else if(vidas <= 0){
  document.getElementById("seleccionar_ataque").style.display = "none";
  document.getElementById("resultado_juego").style.display = "inline";
  document.getElementById("resultado_juego").innerHTML = "has ganado";
  document.getElementById("vidasJugador").innerHTML = "-";
  document.getElementById("vidasEnemigo").innerHTML = "-";
}
else if(vida <= 0){
  document.getElementById("seleccionar_ataque").style.display = "none";
  document.getElementById("resultado_juego").style.display = "inline";
  document.getElementById("resultado_juego").innerHTML = "has perdido"
  document.getElementById("vidasJugador").innerHTML = "-";
  document.getElementById("vidasEnemigo").innerHTML = "-";
}

}
function setdeAtaques(element){
  jugadorAtaca(element,"jugador");
  setTimeout(jugadorAtaca(ataqueEnemigo(),"enemigo"),3000);
}
function setFuego(){
  setdeAtaques(0);
}
function setAgua(){
  setdeAtaques(1);
}
function setAire(){
  setdeAtaques(2);
}
function setTierra(){
  setdeAtaques(3);
}





    
   



window.addEventListener("load",iniciarJuego)